// Code generated from RustLexer.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 82, 550,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79, 9, 79, 4, 80, 9, 80, 4,
	81, 9, 81, 4, 82, 9, 82, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6,
	3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8,
	3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3,
	10, 3, 10, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12,
	3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3,
	19, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21,
	3, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3,
	22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23,
	3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3,
	25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27,
	3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 29, 3, 29, 3,
	29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30,
	3, 30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3,
	31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32,
	3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3,
	34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 36, 3, 36, 3, 36,
	3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3,
	38, 3, 38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39, 3, 40, 3, 40, 3, 40,
	3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 42, 3,
	42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43, 3, 43,
	3, 43, 3, 44, 3, 44, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 3, 45, 3, 46, 6,
	46, 419, 10, 46, 13, 46, 14, 46, 420, 3, 46, 3, 46, 6, 46, 425, 10, 46,
	13, 46, 14, 46, 426, 5, 46, 429, 10, 46, 3, 47, 3, 47, 7, 47, 433, 10,
	47, 12, 47, 14, 47, 436, 11, 47, 3, 47, 3, 47, 3, 48, 3, 48, 7, 48, 442,
	10, 48, 12, 48, 14, 48, 445, 11, 48, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50,
	3, 50, 3, 51, 3, 51, 3, 51, 3, 52, 3, 52, 3, 53, 3, 53, 3, 54, 3, 54, 3,
	55, 3, 55, 3, 55, 3, 56, 3, 56, 3, 56, 3, 57, 3, 57, 3, 58, 3, 58, 3, 58,
	3, 59, 3, 59, 3, 60, 3, 60, 3, 61, 3, 61, 3, 61, 3, 62, 3, 62, 3, 63, 3,
	63, 3, 63, 3, 64, 3, 64, 3, 64, 3, 65, 3, 65, 3, 66, 3, 66, 3, 67, 3, 67,
	3, 68, 3, 68, 3, 69, 3, 69, 3, 70, 3, 70, 3, 71, 3, 71, 3, 72, 3, 72, 3,
	73, 3, 73, 3, 74, 3, 74, 3, 75, 3, 75, 3, 76, 3, 76, 3, 77, 3, 77, 3, 78,
	3, 78, 3, 79, 6, 79, 517, 10, 79, 13, 79, 14, 79, 518, 3, 79, 3, 79, 3,
	80, 3, 80, 3, 80, 3, 80, 7, 80, 527, 10, 80, 12, 80, 14, 80, 530, 11, 80,
	3, 80, 3, 80, 3, 80, 3, 80, 3, 80, 3, 81, 3, 81, 3, 81, 3, 81, 7, 81, 541,
	10, 81, 12, 81, 14, 81, 544, 11, 81, 3, 81, 3, 81, 3, 82, 3, 82, 3, 82,
	3, 528, 2, 83, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19,
	11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37,
	20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55,
	29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 73,
	38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44, 87, 45, 89, 46, 91,
	47, 93, 48, 95, 49, 97, 50, 99, 51, 101, 52, 103, 53, 105, 54, 107, 55,
	109, 56, 111, 57, 113, 58, 115, 59, 117, 60, 119, 61, 121, 62, 123, 63,
	125, 64, 127, 65, 129, 66, 131, 67, 133, 68, 135, 69, 137, 70, 139, 71,
	141, 72, 143, 73, 145, 74, 147, 75, 149, 76, 151, 77, 153, 78, 155, 79,
	157, 80, 159, 81, 161, 82, 163, 2, 3, 2, 10, 3, 2, 50, 59, 3, 2, 36, 36,
	4, 2, 67, 92, 99, 124, 6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 3, 2, 41,
	41, 6, 2, 11, 12, 15, 15, 34, 34, 94, 94, 4, 2, 12, 12, 15, 15, 9, 2, 34,
	35, 37, 37, 45, 45, 47, 48, 60, 60, 66, 66, 93, 95, 2, 556, 2, 3, 3, 2,
	2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2,
	2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3,
	2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27,
	3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2,
	35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2,
	2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2,
	2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2,
	2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3,
	2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73,
	3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 2,
	81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3, 2, 2, 2,
	2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95, 3, 2, 2,
	2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2, 103, 3,
	2, 2, 2, 2, 105, 3, 2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2, 2, 2, 2,
	111, 3, 2, 2, 2, 2, 113, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117, 3, 2,
	2, 2, 2, 119, 3, 2, 2, 2, 2, 121, 3, 2, 2, 2, 2, 123, 3, 2, 2, 2, 2, 125,
	3, 2, 2, 2, 2, 127, 3, 2, 2, 2, 2, 129, 3, 2, 2, 2, 2, 131, 3, 2, 2, 2,
	2, 133, 3, 2, 2, 2, 2, 135, 3, 2, 2, 2, 2, 137, 3, 2, 2, 2, 2, 139, 3,
	2, 2, 2, 2, 141, 3, 2, 2, 2, 2, 143, 3, 2, 2, 2, 2, 145, 3, 2, 2, 2, 2,
	147, 3, 2, 2, 2, 2, 149, 3, 2, 2, 2, 2, 151, 3, 2, 2, 2, 2, 153, 3, 2,
	2, 2, 2, 155, 3, 2, 2, 2, 2, 157, 3, 2, 2, 2, 2, 159, 3, 2, 2, 2, 2, 161,
	3, 2, 2, 2, 3, 165, 3, 2, 2, 2, 5, 169, 3, 2, 2, 2, 7, 173, 3, 2, 2, 2,
	9, 178, 3, 2, 2, 2, 11, 183, 3, 2, 2, 2, 13, 190, 3, 2, 2, 2, 15, 195,
	3, 2, 2, 2, 17, 201, 3, 2, 2, 2, 19, 205, 3, 2, 2, 2, 21, 212, 3, 2, 2,
	2, 23, 217, 3, 2, 2, 2, 25, 223, 3, 2, 2, 2, 27, 227, 3, 2, 2, 2, 29, 236,
	3, 2, 2, 2, 31, 240, 3, 2, 2, 2, 33, 244, 3, 2, 2, 2, 35, 247, 3, 2, 2,
	2, 37, 250, 3, 2, 2, 2, 39, 253, 3, 2, 2, 2, 41, 257, 3, 2, 2, 2, 43, 262,
	3, 2, 2, 2, 45, 274, 3, 2, 2, 2, 47, 285, 3, 2, 2, 2, 49, 291, 3, 2, 2,
	2, 51, 295, 3, 2, 2, 2, 53, 299, 3, 2, 2, 2, 55, 304, 3, 2, 2, 2, 57, 311,
	3, 2, 2, 2, 59, 320, 3, 2, 2, 2, 61, 327, 3, 2, 2, 2, 63, 336, 3, 2, 2,
	2, 65, 350, 3, 2, 2, 2, 67, 355, 3, 2, 2, 2, 69, 358, 3, 2, 2, 2, 71, 363,
	3, 2, 2, 2, 73, 369, 3, 2, 2, 2, 75, 374, 3, 2, 2, 2, 77, 380, 3, 2, 2,
	2, 79, 384, 3, 2, 2, 2, 81, 387, 3, 2, 2, 2, 83, 393, 3, 2, 2, 2, 85, 402,
	3, 2, 2, 2, 87, 409, 3, 2, 2, 2, 89, 413, 3, 2, 2, 2, 91, 418, 3, 2, 2,
	2, 93, 430, 3, 2, 2, 2, 95, 439, 3, 2, 2, 2, 97, 446, 3, 2, 2, 2, 99, 450,
	3, 2, 2, 2, 101, 452, 3, 2, 2, 2, 103, 455, 3, 2, 2, 2, 105, 457, 3, 2,
	2, 2, 107, 459, 3, 2, 2, 2, 109, 461, 3, 2, 2, 2, 111, 464, 3, 2, 2, 2,
	113, 467, 3, 2, 2, 2, 115, 469, 3, 2, 2, 2, 117, 472, 3, 2, 2, 2, 119,
	474, 3, 2, 2, 2, 121, 476, 3, 2, 2, 2, 123, 479, 3, 2, 2, 2, 125, 481,
	3, 2, 2, 2, 127, 484, 3, 2, 2, 2, 129, 487, 3, 2, 2, 2, 131, 489, 3, 2,
	2, 2, 133, 491, 3, 2, 2, 2, 135, 493, 3, 2, 2, 2, 137, 495, 3, 2, 2, 2,
	139, 497, 3, 2, 2, 2, 141, 499, 3, 2, 2, 2, 143, 501, 3, 2, 2, 2, 145,
	503, 3, 2, 2, 2, 147, 505, 3, 2, 2, 2, 149, 507, 3, 2, 2, 2, 151, 509,
	3, 2, 2, 2, 153, 511, 3, 2, 2, 2, 155, 513, 3, 2, 2, 2, 157, 516, 3, 2,
	2, 2, 159, 522, 3, 2, 2, 2, 161, 536, 3, 2, 2, 2, 163, 547, 3, 2, 2, 2,
	165, 166, 7, 107, 2, 2, 166, 167, 7, 56, 2, 2, 167, 168, 7, 54, 2, 2, 168,
	4, 3, 2, 2, 2, 169, 170, 7, 104, 2, 2, 170, 171, 7, 56, 2, 2, 171, 172,
	7, 54, 2, 2, 172, 6, 3, 2, 2, 2, 173, 174, 7, 100, 2, 2, 174, 175, 7, 113,
	2, 2, 175, 176, 7, 113, 2, 2, 176, 177, 7, 110, 2, 2, 177, 8, 3, 2, 2,
	2, 178, 179, 7, 101, 2, 2, 179, 180, 7, 106, 2, 2, 180, 181, 7, 99, 2,
	2, 181, 182, 7, 116, 2, 2, 182, 10, 3, 2, 2, 2, 183, 184, 7, 85, 2, 2,
	184, 185, 7, 118, 2, 2, 185, 186, 7, 116, 2, 2, 186, 187, 7, 107, 2, 2,
	187, 188, 7, 112, 2, 2, 188, 189, 7, 105, 2, 2, 189, 12, 3, 2, 2, 2, 190,
	191, 7, 40, 2, 2, 191, 192, 7, 117, 2, 2, 192, 193, 7, 118, 2, 2, 193,
	194, 7, 116, 2, 2, 194, 14, 3, 2, 2, 2, 195, 196, 7, 119, 2, 2, 196, 197,
	7, 117, 2, 2, 197, 198, 7, 107, 2, 2, 198, 199, 7, 124, 2, 2, 199, 200,
	7, 103, 2, 2, 200, 16, 3, 2, 2, 2, 201, 202, 7, 120, 2, 2, 202, 203, 7,
	103, 2, 2, 203, 204, 7, 101, 2, 2, 204, 18, 3, 2, 2, 2, 205, 206, 7, 117,
	2, 2, 206, 207, 7, 118, 2, 2, 207, 208, 7, 116, 2, 2, 208, 209, 7, 119,
	2, 2, 209, 210, 7, 101, 2, 2, 210, 211, 7, 118, 2, 2, 211, 20, 3, 2, 2,
	2, 212, 213, 7, 118, 2, 2, 213, 214, 7, 116, 2, 2, 214, 215, 7, 119, 2,
	2, 215, 216, 7, 103, 2, 2, 216, 22, 3, 2, 2, 2, 217, 218, 7, 104, 2, 2,
	218, 219, 7, 99, 2, 2, 219, 220, 7, 110, 2, 2, 220, 221, 7, 117, 2, 2,
	221, 222, 7, 103, 2, 2, 222, 24, 3, 2, 2, 2, 223, 224, 7, 114, 2, 2, 224,
	225, 7, 113, 2, 2, 225, 226, 7, 121, 2, 2, 226, 26, 3, 2, 2, 2, 227, 228,
	7, 114, 2, 2, 228, 229, 7, 116, 2, 2, 229, 230, 7, 107, 2, 2, 230, 231,
	7, 112, 2, 2, 231, 232, 7, 118, 2, 2, 232, 233, 7, 110, 2, 2, 233, 234,
	7, 112, 2, 2, 234, 235, 7, 35, 2, 2, 235, 28, 3, 2, 2, 2, 236, 237, 7,
	110, 2, 2, 237, 238, 7, 103, 2, 2, 238, 239, 7, 118, 2, 2, 239, 30, 3,
	2, 2, 2, 240, 241, 7, 111, 2, 2, 241, 242, 7, 119, 2, 2, 242, 243, 7, 118,
	2, 2, 243, 32, 3, 2, 2, 2, 244, 245, 7, 104, 2, 2, 245, 246, 7, 112, 2,
	2, 246, 34, 3, 2, 2, 2, 247, 248, 7, 47, 2, 2, 248, 249, 7, 64, 2, 2, 249,
	36, 3, 2, 2, 2, 250, 251, 7, 63, 2, 2, 251, 252, 7, 64, 2, 2, 252, 38,
	3, 2, 2, 2, 253, 254, 7, 99, 2, 2, 254, 255, 7, 100, 2, 2, 255, 256, 7,
	117, 2, 2, 256, 40, 3, 2, 2, 2, 257, 258, 7, 117, 2, 2, 258, 259, 7, 115,
	2, 2, 259, 260, 7, 116, 2, 2, 260, 261, 7, 118, 2, 2, 261, 42, 3, 2, 2,
	2, 262, 263, 7, 118, 2, 2, 263, 264, 7, 113, 2, 2, 264, 265, 7, 97, 2,
	2, 265, 266, 7, 117, 2, 2, 266, 267, 7, 118, 2, 2, 267, 268, 7, 116, 2,
	2, 268, 269, 7, 107, 2, 2, 269, 270, 7, 112, 2, 2, 270, 271, 7, 105, 2,
	2, 271, 272, 7, 42, 2, 2, 272, 273, 7, 43, 2, 2, 273, 44, 3, 2, 2, 2, 274,
	275, 7, 118, 2, 2, 275, 276, 7, 113, 2, 2, 276, 277, 7, 97, 2, 2, 277,
	278, 7, 113, 2, 2, 278, 279, 7, 121, 2, 2, 279, 280, 7, 112, 2, 2, 280,
	281, 7, 103, 2, 2, 281, 282, 7, 102, 2, 2, 282, 283, 7, 42, 2, 2, 283,
	284, 7, 43, 2, 2, 284, 46, 3, 2, 2, 2, 285, 286, 7, 101, 2, 2, 286, 287,
	7, 110, 2, 2, 287, 288, 7, 113, 2, 2, 288, 289, 7, 112, 2, 2, 289, 290,
	7, 103, 2, 2, 290, 48, 3, 2, 2, 2, 291, 292, 7, 112, 2, 2, 292, 293, 7,
	103, 2, 2, 293, 294, 7, 121, 2, 2, 294, 50, 3, 2, 2, 2, 295, 296, 7, 110,
	2, 2, 296, 297, 7, 103, 2, 2, 297, 298, 7, 112, 2, 2, 298, 52, 3, 2, 2,
	2, 299, 300, 7, 114, 2, 2, 300, 301, 7, 119, 2, 2, 301, 302, 7, 117, 2,
	2, 302, 303, 7, 106, 2, 2, 303, 54, 3, 2, 2, 2, 304, 305, 7, 116, 2, 2,
	305, 306, 7, 103, 2, 2, 306, 307, 7, 111, 2, 2, 307, 308, 7, 113, 2, 2,
	308, 309, 7, 120, 2, 2, 309, 310, 7, 103, 2, 2, 310, 56, 3, 2, 2, 2, 311,
	312, 7, 101, 2, 2, 312, 313, 7, 113, 2, 2, 313, 314, 7, 112, 2, 2, 314,
	315, 7, 118, 2, 2, 315, 316, 7, 99, 2, 2, 316, 317, 7, 107, 2, 2, 317,
	318, 7, 112, 2, 2, 318, 319, 7, 117, 2, 2, 319, 58, 3, 2, 2, 2, 320, 321,
	7, 107, 2, 2, 321, 322, 7, 112, 2, 2, 322, 323, 7, 117, 2, 2, 323, 324,
	7, 103, 2, 2, 324, 325, 7, 116, 2, 2, 325, 326, 7, 118, 2, 2, 326, 60,
	3, 2, 2, 2, 327, 328, 7, 101, 2, 2, 328, 329, 7, 99, 2, 2, 329, 330, 7,
	114, 2, 2, 330, 331, 7, 99, 2, 2, 331, 332, 7, 101, 2, 2, 332, 333, 7,
	107, 2, 2, 333, 334, 7, 118, 2, 2, 334, 335, 7, 123, 2, 2, 335, 62, 3,
	2, 2, 2, 336, 337, 7, 121, 2, 2, 337, 338, 7, 107, 2, 2, 338, 339, 7, 118,
	2, 2, 339, 340, 7, 106, 2, 2, 340, 341, 7, 97, 2, 2, 341, 342, 7, 101,
	2, 2, 342, 343, 7, 99, 2, 2, 343, 344, 7, 114, 2, 2, 344, 345, 7, 99, 2,
	2, 345, 346, 7, 101, 2, 2, 346, 347, 7, 107, 2, 2, 347, 348, 7, 118, 2,
	2, 348, 349, 7, 123, 2, 2, 349, 64, 3, 2, 2, 2, 350, 351, 7, 111, 2, 2,
	351, 352, 7, 99, 2, 2, 352, 353, 7, 107, 2, 2, 353, 354, 7, 112, 2, 2,
	354, 66, 3, 2, 2, 2, 355, 356, 7, 107, 2, 2, 356, 357, 7, 104, 2, 2, 357,
	68, 3, 2, 2, 2, 358, 359, 7, 103, 2, 2, 359, 360, 7, 110, 2, 2, 360, 361,
	7, 117, 2, 2, 361, 362, 7, 103, 2, 2, 362, 70, 3, 2, 2, 2, 363, 364, 7,
	111, 2, 2, 364, 365, 7, 99, 2, 2, 365, 366, 7, 118, 2, 2, 366, 367, 7,
	101, 2, 2, 367, 368, 7, 106, 2, 2, 368, 72, 3, 2, 2, 2, 369, 370, 7, 110,
	2, 2, 370, 371, 7, 113, 2, 2, 371, 372, 7, 113, 2, 2, 372, 373, 7, 114,
	2, 2, 373, 74, 3, 2, 2, 2, 374, 375, 7, 121, 2, 2, 375, 376, 7, 106, 2,
	2, 376, 377, 7, 107, 2, 2, 377, 378, 7, 110, 2, 2, 378, 379, 7, 103, 2,
	2, 379, 76, 3, 2, 2, 2, 380, 381, 7, 104, 2, 2, 381, 382, 7, 113, 2, 2,
	382, 383, 7, 116, 2, 2, 383, 78, 3, 2, 2, 2, 384, 385, 7, 107, 2, 2, 385,
	386, 7, 112, 2, 2, 386, 80, 3, 2, 2, 2, 387, 388, 7, 100, 2, 2, 388, 389,
	7, 116, 2, 2, 389, 390, 7, 103, 2, 2, 390, 391, 7, 99, 2, 2, 391, 392,
	7, 109, 2, 2, 392, 82, 3, 2, 2, 2, 393, 394, 7, 101, 2, 2, 394, 395, 7,
	113, 2, 2, 395, 396, 7, 112, 2, 2, 396, 397, 7, 118, 2, 2, 397, 398, 7,
	107, 2, 2, 398, 399, 7, 112, 2, 2, 399, 400, 7, 119, 2, 2, 400, 401, 7,
	103, 2, 2, 401, 84, 3, 2, 2, 2, 402, 403, 7, 116, 2, 2, 403, 404, 7, 103,
	2, 2, 404, 405, 7, 118, 2, 2, 405, 406, 7, 119, 2, 2, 406, 407, 7, 116,
	2, 2, 407, 408, 7, 112, 2, 2, 408, 86, 3, 2, 2, 2, 409, 410, 7, 111, 2,
	2, 410, 411, 7, 113, 2, 2, 411, 412, 7, 102, 2, 2, 412, 88, 3, 2, 2, 2,
	413, 414, 7, 114, 2, 2, 414, 415, 7, 119, 2, 2, 415, 416, 7, 100, 2, 2,
	416, 90, 3, 2, 2, 2, 417, 419, 9, 2, 2, 2, 418, 417, 3, 2, 2, 2, 419, 420,
	3, 2, 2, 2, 420, 418, 3, 2, 2, 2, 420, 421, 3, 2, 2, 2, 421, 428, 3, 2,
	2, 2, 422, 424, 7, 48, 2, 2, 423, 425, 9, 2, 2, 2, 424, 423, 3, 2, 2, 2,
	425, 426, 3, 2, 2, 2, 426, 424, 3, 2, 2, 2, 426, 427, 3, 2, 2, 2, 427,
	429, 3, 2, 2, 2, 428, 422, 3, 2, 2, 2, 428, 429, 3, 2, 2, 2, 429, 92, 3,
	2, 2, 2, 430, 434, 7, 36, 2, 2, 431, 433, 10, 3, 2, 2, 432, 431, 3, 2,
	2, 2, 433, 436, 3, 2, 2, 2, 434, 432, 3, 2, 2, 2, 434, 435, 3, 2, 2, 2,
	435, 437, 3, 2, 2, 2, 436, 434, 3, 2, 2, 2, 437, 438, 7, 36, 2, 2, 438,
	94, 3, 2, 2, 2, 439, 443, 9, 4, 2, 2, 440, 442, 9, 5, 2, 2, 441, 440, 3,
	2, 2, 2, 442, 445, 3, 2, 2, 2, 443, 441, 3, 2, 2, 2, 443, 444, 3, 2, 2,
	2, 444, 96, 3, 2, 2, 2, 445, 443, 3, 2, 2, 2, 446, 447, 9, 6, 2, 2, 447,
	448, 9, 4, 2, 2, 448, 449, 9, 6, 2, 2, 449, 98, 3, 2, 2, 2, 450, 451, 7,
	48, 2, 2, 451, 100, 3, 2, 2, 2, 452, 453, 7, 60, 2, 2, 453, 454, 7, 60,
	2, 2, 454, 102, 3, 2, 2, 2, 455, 456, 7, 60, 2, 2, 456, 104, 3, 2, 2, 2,
	457, 458, 7, 61, 2, 2, 458, 106, 3, 2, 2, 2, 459, 460, 7, 46, 2, 2, 460,
	108, 3, 2, 2, 2, 461, 462, 7, 35, 2, 2, 462, 463, 7, 63, 2, 2, 463, 110,
	3, 2, 2, 2, 464, 465, 7, 63, 2, 2, 465, 466, 7, 63, 2, 2, 466, 112, 3,
	2, 2, 2, 467, 468, 7, 35, 2, 2, 468, 114, 3, 2, 2, 2, 469, 470, 7, 126,
	2, 2, 470, 471, 7, 126, 2, 2, 471, 116, 3, 2, 2, 2, 472, 473, 7, 126, 2,
	2, 473, 118, 3, 2, 2, 2, 474, 475, 7, 97, 2, 2, 475, 120, 3, 2, 2, 2, 476,
	477, 7, 40, 2, 2, 477, 478, 7, 40, 2, 2, 478, 122, 3, 2, 2, 2, 479, 480,
	7, 63, 2, 2, 480, 124, 3, 2, 2, 2, 481, 482, 7, 64, 2, 2, 482, 483, 7,
	63, 2, 2, 483, 126, 3, 2, 2, 2, 484, 485, 7, 62, 2, 2, 485, 486, 7, 63,
	2, 2, 486, 128, 3, 2, 2, 2, 487, 488, 7, 64, 2, 2, 488, 130, 3, 2, 2, 2,
	489, 490, 7, 62, 2, 2, 490, 132, 3, 2, 2, 2, 491, 492, 7, 44, 2, 2, 492,
	134, 3, 2, 2, 2, 493, 494, 7, 49, 2, 2, 494, 136, 3, 2, 2, 2, 495, 496,
	7, 45, 2, 2, 496, 138, 3, 2, 2, 2, 497, 498, 7, 47, 2, 2, 498, 140, 3,
	2, 2, 2, 499, 500, 7, 39, 2, 2, 500, 142, 3, 2, 2, 2, 501, 502, 7, 42,
	2, 2, 502, 144, 3, 2, 2, 2, 503, 504, 7, 43, 2, 2, 504, 146, 3, 2, 2, 2,
	505, 506, 7, 125, 2, 2, 506, 148, 3, 2, 2, 2, 507, 508, 7, 127, 2, 2, 508,
	150, 3, 2, 2, 2, 509, 510, 7, 93, 2, 2, 510, 152, 3, 2, 2, 2, 511, 512,
	7, 95, 2, 2, 512, 154, 3, 2, 2, 2, 513, 514, 7, 40, 2, 2, 514, 156, 3,
	2, 2, 2, 515, 517, 9, 7, 2, 2, 516, 515, 3, 2, 2, 2, 517, 518, 3, 2, 2,
	2, 518, 516, 3, 2, 2, 2, 518, 519, 3, 2, 2, 2, 519, 520, 3, 2, 2, 2, 520,
	521, 8, 79, 2, 2, 521, 158, 3, 2, 2, 2, 522, 523, 7, 49, 2, 2, 523, 524,
	7, 44, 2, 2, 524, 528, 3, 2, 2, 2, 525, 527, 11, 2, 2, 2, 526, 525, 3,
	2, 2, 2, 527, 530, 3, 2, 2, 2, 528, 529, 3, 2, 2, 2, 528, 526, 3, 2, 2,
	2, 529, 531, 3, 2, 2, 2, 530, 528, 3, 2, 2, 2, 531, 532, 7, 44, 2, 2, 532,
	533, 7, 49, 2, 2, 533, 534, 3, 2, 2, 2, 534, 535, 8, 80, 2, 2, 535, 160,
	3, 2, 2, 2, 536, 537, 7, 49, 2, 2, 537, 538, 7, 49, 2, 2, 538, 542, 3,
	2, 2, 2, 539, 541, 10, 8, 2, 2, 540, 539, 3, 2, 2, 2, 541, 544, 3, 2, 2,
	2, 542, 540, 3, 2, 2, 2, 542, 543, 3, 2, 2, 2, 543, 545, 3, 2, 2, 2, 544,
	542, 3, 2, 2, 2, 545, 546, 8, 81, 2, 2, 546, 162, 3, 2, 2, 2, 547, 548,
	7, 94, 2, 2, 548, 549, 9, 9, 2, 2, 549, 164, 3, 2, 2, 2, 11, 2, 420, 426,
	428, 434, 443, 518, 528, 542, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'i64'", "'f64'", "'bool'", "'char'", "'String'", "'&str'", "'usize'",
	"'vec'", "'struct'", "'true'", "'false'", "'pow'", "'println!'", "'let'",
	"'mut'", "'fn'", "'->'", "'=>'", "'abs'", "'sqrt'", "'to_string()'", "'to_owned()'",
	"'clone'", "'new'", "'len'", "'push'", "'remove'", "'contains'", "'insert'",
	"'capacity'", "'with_capacity'", "'main'", "'if'", "'else'", "'match'",
	"'loop'", "'while'", "'for'", "'in'", "'break'", "'continue'", "'return'",
	"'mod'", "'pub'", "", "", "", "", "'.'", "'::'", "':'", "';'", "','", "'!='",
	"'=='", "'!'", "'||'", "'|'", "'_'", "'&&'", "'='", "'>='", "'<='", "'>'",
	"'<'", "'*'", "'/'", "'+'", "'-'", "'%'", "'('", "')'", "'{'", "'}'", "'['",
	"']'", "'&'",
}

var lexerSymbolicNames = []string{
	"", "INT", "FLOAT", "BOOL", "CHAR", "STR1", "STR2", "USIZE", "VECTOR",
	"STRUCT", "TRU", "FAL", "POW", "PRINT", "LET", "MUT", "FUNC", "ARROW1",
	"ARROW2", "ABS", "SQRT", "TOSTR", "TOOWN", "CLONE", "NEW", "LEN", "PUSH",
	"REMOVE", "CONTAINS", "INSERT", "CAPACITY", "WCAPACITY", "MAIN", "IF",
	"ELSE", "MATCH", "LOOP", "WHILE", "FOR", "IN", "BREAK", "CONTINUE", "RETURN",
	"MODULE", "PUB", "NUMBER", "STRING", "ID", "CHARACTER", "PUNTO", "C_PTS",
	"D_PTS", "PYC", "COMA", "DIFERENTE", "IG_IG", "NOT", "OR", "PLEC", "UNDERSCORE",
	"AND", "IGUAL", "MAYORIGUAL", "MENORIGUAL", "MAYOR", "MENOR", "MUL", "DIV",
	"ADD", "SUB", "MOD", "PARIZQ", "PARDER", "LLAVEIZQ", "LLAVEDER", "CORIZQ",
	"CORDER", "AMP", "WHITESPACE", "COMMENT", "LINE_COMMENT",
}

var lexerRuleNames = []string{
	"INT", "FLOAT", "BOOL", "CHAR", "STR1", "STR2", "USIZE", "VECTOR", "STRUCT",
	"TRU", "FAL", "POW", "PRINT", "LET", "MUT", "FUNC", "ARROW1", "ARROW2",
	"ABS", "SQRT", "TOSTR", "TOOWN", "CLONE", "NEW", "LEN", "PUSH", "REMOVE",
	"CONTAINS", "INSERT", "CAPACITY", "WCAPACITY", "MAIN", "IF", "ELSE", "MATCH",
	"LOOP", "WHILE", "FOR", "IN", "BREAK", "CONTINUE", "RETURN", "MODULE",
	"PUB", "NUMBER", "STRING", "ID", "CHARACTER", "PUNTO", "C_PTS", "D_PTS",
	"PYC", "COMA", "DIFERENTE", "IG_IG", "NOT", "OR", "PLEC", "UNDERSCORE",
	"AND", "IGUAL", "MAYORIGUAL", "MENORIGUAL", "MAYOR", "MENOR", "MUL", "DIV",
	"ADD", "SUB", "MOD", "PARIZQ", "PARDER", "LLAVEIZQ", "LLAVEDER", "CORIZQ",
	"CORDER", "AMP", "WHITESPACE", "COMMENT", "LINE_COMMENT", "ESC_SEQ",
}

type RustLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewRustLexer(input antlr.CharStream) *RustLexer {

	l := new(RustLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "RustLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// RustLexer tokens.
const (
	RustLexerINT          = 1
	RustLexerFLOAT        = 2
	RustLexerBOOL         = 3
	RustLexerCHAR         = 4
	RustLexerSTR1         = 5
	RustLexerSTR2         = 6
	RustLexerUSIZE        = 7
	RustLexerVECTOR       = 8
	RustLexerSTRUCT       = 9
	RustLexerTRU          = 10
	RustLexerFAL          = 11
	RustLexerPOW          = 12
	RustLexerPRINT        = 13
	RustLexerLET          = 14
	RustLexerMUT          = 15
	RustLexerFUNC         = 16
	RustLexerARROW1       = 17
	RustLexerARROW2       = 18
	RustLexerABS          = 19
	RustLexerSQRT         = 20
	RustLexerTOSTR        = 21
	RustLexerTOOWN        = 22
	RustLexerCLONE        = 23
	RustLexerNEW          = 24
	RustLexerLEN          = 25
	RustLexerPUSH         = 26
	RustLexerREMOVE       = 27
	RustLexerCONTAINS     = 28
	RustLexerINSERT       = 29
	RustLexerCAPACITY     = 30
	RustLexerWCAPACITY    = 31
	RustLexerMAIN         = 32
	RustLexerIF           = 33
	RustLexerELSE         = 34
	RustLexerMATCH        = 35
	RustLexerLOOP         = 36
	RustLexerWHILE        = 37
	RustLexerFOR          = 38
	RustLexerIN           = 39
	RustLexerBREAK        = 40
	RustLexerCONTINUE     = 41
	RustLexerRETURN       = 42
	RustLexerMODULE       = 43
	RustLexerPUB          = 44
	RustLexerNUMBER       = 45
	RustLexerSTRING       = 46
	RustLexerID           = 47
	RustLexerCHARACTER    = 48
	RustLexerPUNTO        = 49
	RustLexerC_PTS        = 50
	RustLexerD_PTS        = 51
	RustLexerPYC          = 52
	RustLexerCOMA         = 53
	RustLexerDIFERENTE    = 54
	RustLexerIG_IG        = 55
	RustLexerNOT          = 56
	RustLexerOR           = 57
	RustLexerPLEC         = 58
	RustLexerUNDERSCORE   = 59
	RustLexerAND          = 60
	RustLexerIGUAL        = 61
	RustLexerMAYORIGUAL   = 62
	RustLexerMENORIGUAL   = 63
	RustLexerMAYOR        = 64
	RustLexerMENOR        = 65
	RustLexerMUL          = 66
	RustLexerDIV          = 67
	RustLexerADD          = 68
	RustLexerSUB          = 69
	RustLexerMOD          = 70
	RustLexerPARIZQ       = 71
	RustLexerPARDER       = 72
	RustLexerLLAVEIZQ     = 73
	RustLexerLLAVEDER     = 74
	RustLexerCORIZQ       = 75
	RustLexerCORDER       = 76
	RustLexerAMP          = 77
	RustLexerWHITESPACE   = 78
	RustLexerCOMMENT      = 79
	RustLexerLINE_COMMENT = 80
)
